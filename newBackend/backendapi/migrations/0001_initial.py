# Generated by Django 3.0 on 2021-06-28 09:20

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CA_Item',
            fields=[
                ('ca_item_name', models.CharField(max_length=20, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_code', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=50)),
                ('credits', models.IntegerField(choices=[(12, 12), (8, 8), (16, 16)], default=12)),
            ],
            options={
                'verbose_name': 'course',
                'verbose_name_plural': 'courses',
            },
        ),
        migrations.CreateModel(
            name='Course_Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('da_te', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Course Venue',
                'verbose_name_plural': 'Course Venue',
            },
        ),
        migrations.CreateModel(
            name='Lecture_Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(choices=[('a', '2020/2021'), ('b', '2021/2022'), ('c', '2022/2023'), ('d', '2023/2024'), ('e', '2024/2025'), ('f', '2025/2026')], default='a', max_length=9)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendapi.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('program_name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('program_span', models.IntegerField(validators=[django.core.validators.MaxValueValidator(4), django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='question', max_length=10)),
                ('first_question', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('second_question', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('third_question', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('fourth_question', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('sum', models.PositiveSmallIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(max_length=50)),
                ('regno', models.CharField(max_length=13, primary_key=True, serialize=False)),
                ('program', models.ForeignKey(on_delete=models.SET('empty'), related_name='program', to='backendapi.Program')),
            ],
            options={
                'verbose_name': 'student',
                'verbose_name_plural': 'students',
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('venue_name', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='UE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_type', models.CharField(choices=[('sup', 'suplimentary'), ('special', 'special'), ('UE', 'UE')], max_length=30)),
                ('academic_year', models.CharField(choices=[('21', '2020/2021'), ('22', '2021/2022'), ('23', '2022/2023'), ('24', '2023/2024'), ('25', '2024/2025'), ('26', '2025/2026')], default='21', max_length=9)),
                ('date_taken', models.DateTimeField(verbose_name='Date')),
                ('number_of_questions', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ue', to='backendapi.Course')),
                ('venue', models.ManyToManyField(through='backendapi.Course_Venue', to='backendapi.Venue')),
            ],
            options={
                'verbose_name': 'University Exam',
                'verbose_name_plural': 'University Exams',
                'unique_together': {('course', 'exam_type', 'academic_year', 'date_taken', 'number_of_questions')},
            },
        ),
        migrations.CreateModel(
            name='Program_Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(2), django.core.validators.MinValueValidator(1)])),
                ('course_type', models.CharField(choices=[('core', 'Core'), ('optional', 'Optional')], default='core', max_length=10, null=True)),
                ('year_of_study', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], default='1', max_length=1)),
                ('academic_year', models.CharField(choices=[('a', '2020/2021'), ('b', '2021/2022'), ('c', '2022/2023'), ('d', '2023/2024'), ('e', '2024/2025'), ('f', '2025/2026')], default='a', max_length=9)),
                ('mandatory', models.BooleanField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendapi.Course')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendapi.Program')),
            ],
            options={
                'unique_together': {('course', 'program', 'academic_year', 'semester', 'course_type', 'year_of_study')},
            },
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('lecturer', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('course', models.ManyToManyField(through='backendapi.Lecture_Course', to='backendapi.Course')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='backendapi.Role')),
            ],
            options={
                'verbose_name': 'lecturer',
                'verbose_name_plural': 'lecturers',
                'unique_together': {('lecturer', 'role')},
            },
        ),
        migrations.AddField(
            model_name='lecture_course',
            name='lecturer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendapi.Lecturer'),
        ),
        migrations.AddField(
            model_name='course_venue',
            name='head_supervisor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendapi.Lecturer'),
        ),
        migrations.AddField(
            model_name='course_venue',
            name='paper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendapi.UE'),
        ),
        migrations.AddField(
            model_name='course_venue',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendapi.Venue'),
        ),
        migrations.AddField(
            model_name='course',
            name='program',
            field=models.ManyToManyField(through='backendapi.Program_Course', to='backendapi.Program'),
        ),
        migrations.CreateModel(
            name='CA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ca', models.IntegerField(null=True)),
                ('academic_year', models.CharField(choices=[('a', '2020/2021'), ('b', '2021/2022'), ('c', '2022/2023'), ('d', '2023/2024'), ('e', '2024/2025'), ('f', '2025/2026')], default='a', max_length=9)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendapi.Course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendapi.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.CharField(choices=[('2020/2021', '2020/2021'), ('2021/2022', '2021/2022'), ('2022/2023', '2022/2023'), ('2023/2024', '2023/2024'), ('2024/2025', '2024/2025'), ('2025/2026', '2025/2026')], default='2020/2021', max_length=9, null=True)),
                ('date_taken', models.CharField(max_length=10, null=True, verbose_name='Date')),
                ('number_of_questions', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(1)])),
                ('contribution', models.IntegerField(default=20, validators=[django.core.validators.MaxValueValidator(40), django.core.validators.MinValueValidator(0)], verbose_name='Contribution to CA in Percentage')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment', to='backendapi.Course')),
                ('criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment', to='backendapi.CA_Item')),
            ],
            options={
                'unique_together': {('course', 'criteria')},
            },
        ),
        migrations.CreateModel(
            name='UE_Results',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avarage_score', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendapi.Course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backendapi.Student')),
            ],
            options={
                'verbose_name': 'University Exam Result',
                'verbose_name_plural': 'University Exam Results',
                'unique_together': {('course', 'student')},
            },
        ),
        migrations.CreateModel(
            name='UE_Questions_Results',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100)])),
                ('question_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='backendapi.Student')),
                ('ue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='backendapi.UE')),
            ],
            options={
                'verbose_name': 'University Exam Questions Result',
                'verbose_name_plural': 'University Exam Questions Results',
                'unique_together': {('score', 'question_number', 'student', 'ue')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='lecture_course',
            unique_together={('lecturer', 'course', 'academic_year')},
        ),
        migrations.AlterUniqueTogether(
            name='course_venue',
            unique_together={('paper', 'venue')},
        ),
        migrations.CreateModel(
            name='Assessment_Results',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='backendapi.Assessment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_result', to='backendapi.Student')),
            ],
            options={
                'unique_together': {('assessment', 'student', 'score')},
            },
        ),
    ]
